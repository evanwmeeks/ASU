
12.10

// This program should ask the user for the name of the file that they would like to open.
// The program will then open the file with the user specified name,
// and total up the list of integers in the file.
// Input files will always have one integer on each line.
// There may be a different number of lines in each input file.

// You must fill in the missing piece described in the code below.
// 1) you must write the sumFileContents method.

// make no other changes to the code, 
// and make no changes to any of the provided .dat files.

import java.util.Scanner;
import java.io.FileInputStream;
import java.io.IOException;

class Main {
    // The scnr Scanner variable defined below will be used to collect any user input
    public static Scanner scnr = new Scanner(System.in);
   
    public static void main(String[] args) throws IOException {
        String fileName = getFileName();
        
        int sum = sumFileContents(fileName);
        
        System.out.println("The sum is: " + sum);
    }
    
    public static String getFileName() {
        System.out.print("Enter file name: ");
        return scnr.nextLine();
    }
    
    /* 1) Write a public static method named sumFileContents.
          This method should take one String argument (a complete file name).
          This method should open the specified file.
          This method should read in all of the integers in the file and add each to a total.
          This method should return an int (the total of all integers in the file).
          Be sure to add the 'throws IOException' clause after the parameter list.*/
    public static int sumFileContents(String fileName) throws IOException {
       int sum = 0;
       FileInputStream myFile = new FileInputStream(fileName);
       Scanner myFileReader = new Scanner(myFile);
       while (myFileReader.hasNext()) {
          sum +=myFileReader.nextInt();
       }
       return sum;
       
       
    }

}


##############################################################################

12.11

// This program will copy the contents of one file into another file,
// line by line.

// You must complete the `makeCopy` method and fill in the missing pieces described in the code below.
// 1) you must write a loop to iterate while the scanner has a next line.
//    within the loop you must ...
//    2) use the scanner to read the next line from the input file and store it in a String variable.
//    3) use the file writer to write the String to the output file.
// after the loop you must ...
// 4) flush the PrintWriter
// 5) close the PrintWriter

// make no other changes to the code, 

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter ;
import java.io.IOException;
import java.util.Scanner;

class Main {
    public static void main(String[] args) throws IOException {
        makeCopy("original.dat", "copy.dat");
        
        // print out the contents of the copy to 
        // verify that the original was copied correctly
        printFile("copy.dat");
    }
    
    public static void makeCopy(String inputFileName, String outputFileName) throws IOException {
        // open a File with the given inputFileName
        // and instantiate a Scanner object to read the File
        Scanner myFileReader = new Scanner(new FileInputStream(inputFileName));        
        
        // open a File with the given outputFileName
        // and instantiate a PrintWriter object to write to the File
        PrintWriter myFileWriter = new PrintWriter(new FileOutputStream(outputFileName));
        
        // 1) loop while the Scanner has a next line
        while(myFileReader.hasNext()) {
            // 2) read the next line from the Scanner and store it in a String variable
            String s = myFileReader.nextLine();
            // 3) write the line to the output file
            myFileWriter.println(s);
        // loop ends
        }
        
        // 4) flush the PrintWriter
        myFileWriter.flush();
        // 5) close the PrintWriter
        myFileWriter.close();

        myFileReader.close();
    }
    
    // make no changes to this printFile method
    public static void printFile(String fileName) throws IOException {
       Scanner myFileReader = new Scanner(new FileInputStream(fileName));
         while (myFileReader.hasNextLine()) {
            System.out.println(myFileReader.nextLine());
        }

        myFileReader.close();
    }
}

##############################################################################

12.12

// This program will read the contents of an input file (line by line);
// each line of the input file will have one integer value between 1 and 100.
// From the data in the input file, you must compute the
// sum, average, minimum, and maximum values.
// These values must then be printed to the console (terminal).

// You must fill in the missing piece described in the code below.
// 1) you must write the reportStatistics method.

// make no other changes to the code, 
// and make no changes to any of the provided .dat files.

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter ;
import java.io.IOException;
import java.util.Scanner;

class Main {
    static Scanner scnr = new Scanner(System.in);
    // make no changes to this method
    public static void main(String[] args) throws IOException {
        String inputFileName = getFileName("Enter input file name  : ");
        
        reportStatistics(inputFileName);
    }
    
    // make no changes to this method
    public static String getFileName(String prompt) {
        System.out.print(prompt);
        return scnr.nextLine();
    }
    
    /* 1) Write a public static method named reportStatistics.
          Be sure to add the 'throws IOException' clause to the method header
          This method should take one String argument (an input file name).
          This method should have a return type of void.
          This method should read in all of the integers from the input file.
          This method should compute the sum (int), average (float), min (int) and max (int) values.
          from the data in the input file.
          This method should output these statistics to the console (terminal).
          The output should look like this (average should have two digits to the right of the decimal point):
             Sum is     : 45
             Average is : 5.00
             Min is     : 1
             Max is     : 9 
    */
   public static void reportStatistics(String fileName) throws IOException {
      int sum = 0;
      int numberOfInts = 0;
      int min = 101; 
      int max = 0;
      
      Scanner myFileReader = new Scanner(new FileInputStream(fileName));
      while(myFileReader.hasNextInt()) {
         int input = myFileReader.nextInt();
         sum += input;
         numberOfInts ++;
         if(min > input) {
            min = input;
            }
         if(max < input) {
            max = input;
         }
      }
      double average = sum / numberOfInts;
      System.out.println("Sum is     : " + sum);
      System.out.printf("Average is : %.2f\n", average);
      System.out.println("Min is     : " + min);
      System.out.println("Max is     : " + max);
      
      myFileReader.close();
   }
    // make no changes to this method
    public static void printFile(String fileName) throws IOException {
       Scanner myFileReader = new Scanner(new FileInputStream(fileName));
         while (myFileReader.hasNextLine()) {
            System.out.println(myFileReader.nextLine());
        }

        myFileReader.close();
    }
}

##############################################################################

12.13

// This program will read the contents of an input file (line by line);
// each line of the input file will have one integer value between 1 and 100.
// From the data in the input file, you must compute the
// sum, average, minimum, and maximum values.
// These values must then be written to an output file.

// You must fill in the missing piece described in the code below.
// 1) you must write the reportStatistics method.

// make no other changes to the code, 
// and make no changes to any of the provided .dat files.

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter ;
import java.io.IOException;
import java.util.Scanner;

class Main {
    static Scanner scnr = new Scanner(System.in);
    // make no changes to this method
    public static void main(String[] args) throws IOException {
        String inputFileName = getFileName("Enter input file name  : ");
        String outputFileName = getFileName("Enter output file name : ");
        
        reportStatistics(inputFileName, outputFileName);
        
          // print out the contents of the output file to
        // verify that the output file is correct
        System.out.println("\n" + outputFileName + " contents :");
        printFile(outputFileName);
    }
    
    // make no changes to this method
    public static String getFileName(String prompt) {
        System.out.print(prompt);
        return scnr.nextLine();
    }
    
    /* 1) Write a public static method named reportStatistics.
          Be sure to add the 'throws IOException' clause to the method header
          This method should take two String arguments (an input file name and an output file name).
          This method should have a return type of void.
          This method should read in all of the integers from the input file.
          This method should compute the sum (int), average (float), min (int) and max (int) values.
          from the data in the input file.
          This method should output these statistics to the output file.
          The output should look like this (average should have two digits to the right of the decimal point):
             Sum is     : 45
             Average is : 5.00
             Min is     : 1
             Max is     : 9 
    */
   public static void reportStatistics(String inputFile, String outputFile) throws IOException {
        int sum = 0, count = 0, min = 101, max = 0;
      Scanner input= new Scanner(new FileInputStream(inputFile));
        while (input.hasNextInt()) {
            int x = input.nextInt();
            sum += x;
            if (min > x) {
               min = x; 
            }
            if (max < x) {
               max = x;
            }
            count++;
        }
        float average = (float) sum / count;
        input.close();
        FileOutputStream output = new FileOutputStream(outputFile);
      PrintWriter myFileWriter = new PrintWriter(output);
      
        myFileWriter.println("Sum is     : " + sum);
        myFileWriter.printf("Average is : %.2f\n", average);
        myFileWriter.println("Min is     : " + min);
        myFileWriter.println("Max is     : " + max);
        
      System.out.println("Sum is     : " + sum);
      System.out.printf("Average is : %.2f\n", average);
      System.out.println("Min is     : " + min);
      System.out.println("Max is     : " + max);
      myFileWriter.close();
        
   }
    
    // make no changes to this method
    public static void printFile(String fileName) throws IOException {
       Scanner myFileReader = new Scanner(new FileInputStream(fileName));
         while (myFileReader.hasNextLine()) {
            System.out.println(myFileReader.nextLine());
        }

        myFileReader.close();
    }
}

